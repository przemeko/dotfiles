function csvpreview(){
      sed 's/,,/, ,/g;s/,,/, ,/g' "$@" | column -s, -t | less -#2 -N -S
}

# whois a domain or a URL
function whois() {
	local domain=$(echo "$1" | awk -F/ '{print $3}') # get domain from URL
	if [ -z $domain ] ; then
		domain=$1
	fi
	echo "Getting whois record for: $domain â€¦"

	# this is the best whois server
	/usr/bin/whois -h whois.internic.net $domain | sed '/NOTICE:/q'
}


# git commit browser
# needs fzf and ctrl-m to view commit.
function gitcommitsbrowser() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --toggle-sort=\` \
      --bind "ctrl-m:execute:
                echo '{}' | grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R'"
}

# find shorthand
function f() {
	find . -name "$1" 2>&1 | grep -v 'Permission denied'
}

# usage: countcharacters "count me"
function countcharacters() {
    echo -n "$1" | wc -m
}

# sort branches by modification date
function gitsortbranches() {
    for branch in `git branch -l | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r
}

# git ahead/behind info between main and current branch
# https://stackoverflow.com/questions/20433867/git-ahead-behind-info-between-master-and-branch
function gitbehindahead() {
    local CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    echo "origin/main...$CURRENT_BRANCH"
    git fetch -q  # make sure we up to date
    git rev-list --left-right --count origin/main...HEAD | awk '{print "\033[31m"$1" commits behind\033[0m\n" "\033[34m"$2 " commits ahead\033[0m"}'
    git rev-list --left-right --pretty=oneline origin/main...HEAD | awk '{if (substr($1,1,1) == "<") print "\033[31m"$0"\033[0m"; else print "\033[34m"$0"\033[0m";}'
}